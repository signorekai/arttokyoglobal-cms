diff --git a/node_modules/@strapi/provider-upload-aws-s3/lib/index.js b/node_modules/@strapi/provider-upload-aws-s3/lib/index.js
index 32ae127..8be4015 100644
--- a/node_modules/@strapi/provider-upload-aws-s3/lib/index.js
+++ b/node_modules/@strapi/provider-upload-aws-s3/lib/index.js
@@ -9,20 +9,39 @@
 const _ = require('lodash');
 const AWS = require('aws-sdk');
 
+function assertUrlProtocol(url) {
+  // Regex to test protocol like "http://", "https://"
+  return /^\w*:\/\//.test(url);
+}
+
 module.exports = {
-  init(config) {
+  init({ baseUrl = null, rootPath = null, s3Options, ...legacyS3Options }) {
+    if (legacyS3Options)
+      process.emitWarning(
+        "S3 configuration options passed at root level of the plugin's providerOptions is deprecated and will be removed in a future release. Please wrap them inside the 's3Options:{}' property."
+      );
+
     const S3 = new AWS.S3({
       apiVersion: '2006-03-01',
-      ...config,
+      ...s3Options,
+      ...legacyS3Options,
     });
 
+    const filePrefix = rootPath ? `${rootPath.replace(/\/+$/, '')}/` : '';
+
+    function getFileKey(file) {
+      const path = file.path ? `${file.path}/` : '';
+
+      return `${filePrefix}${path}${file.hash}${file.ext}`;
+    }
+
     const upload = (file, customParams = {}) =>
       new Promise((resolve, reject) => {
         // upload file on S3 bucket
-        const path = file.path ? `${file.path}/` : '';
+        const fileKey = getFileKey(file);
         S3.upload(
           {
-            Key: `${path}${file.hash}${file.ext}`,
+            Key: fileKey,
             Body: file.stream || Buffer.from(file.buffer, 'binary'),
             ACL: 'public-read',
             ContentType: file.mime,
@@ -34,7 +53,12 @@ module.exports = {
             }
 
             // set the bucket file url
-            file.url = data.Location;
+            if (assertUrlProtocol(data.Location)) {
+              file.url = baseUrl ? `${baseUrl}/${fileKey}` : data.Location;
+            } else {
+              // Default protocol to https protocol
+              file.url = `https://${data.Location}`;
+            }
 
             resolve();
           }
@@ -51,13 +75,13 @@ module.exports = {
       delete(file, customParams = {}) {
         return new Promise((resolve, reject) => {
           // delete file on S3 bucket
-          const path = file.path ? `${file.path}/` : '';
+          const fileKey = getFileKey(file);
           S3.deleteObject(
             {
-              Key: `${path}${file.hash}${file.ext}`,
+              Key: fileKey,
               ...customParams,
             },
-            (err, data) => {
+            (err) => {
               if (err) {
                 return reject(err);
               }
